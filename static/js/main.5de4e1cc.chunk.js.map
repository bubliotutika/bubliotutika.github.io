{"version":3,"sources":["service/AudioService.js","views/Upload/index.js","App.js","index.js"],"names":["AudioService","file","Promise","resolve","reject","data","FormData","append","Axios","post","headers","then","res","catch","e","Upload","props","handleFileInput","target","name","files","setState","uploadFile","a","state","upload","error","type","message","showMessage","color","TextContainer","styled","div","Text","p","this","Container","onChange","Button","onClick","Component","button","MainContainer","App","ReactDOM","render","document","getElementById"],"mappings":"wRAyBeA,E,oGApBCC,GACZ,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC5B,IACE,IACMC,EAAO,IAAIC,SACjBD,EAAKE,OAAO,YAAaN,GAIzBO,IAAMC,KAAK,yDAA0DJ,EANtD,CAACK,QAAS,CAAC,eAAgB,yBAOvCC,MAAK,SAAAC,GAAG,OAAIT,EAAQS,EAAIP,SACxBQ,OAAM,SAAAC,GAAC,OAAIV,EAAOU,MACrB,MAAOA,GACPV,EAAOU,W,imBCVTC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KASRC,gBAAkB,SAACH,GAAO,IAAD,EACDA,EAAEI,OAAjBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACb,EAAKC,SAAL,eAAgBF,EAAOC,EAAM,MAZZ,EAenBE,WAfmB,sBAeN,8BAAAC,EAAA,oEAEFtB,EAAQ,EAAKuB,MAAbvB,MAFE,gCAKWD,EAAayB,OAAOxB,GAL/B,QAKDW,EALC,QAMCc,MACN,EAAKL,SAAS,CAACM,KAAM,QAASC,QAAShB,EAAIc,QAE3C,EAAKL,SAAS,CAACM,KAAM,UAAWC,QAAS,gBAAiB3B,KAAM,OAT3D,uBAWP,EAAKoB,SAAS,CAACM,KAAM,QAASC,QAAS,8BAXhC,0DAgBT,EAAKP,SAAS,CAACM,KAAM,QAASC,QAAS,oBAhB9B,0DAfM,EAmCnBC,YAAc,WAAO,IAAD,EACM,EAAKL,MAAtBI,EADW,EACXA,QACDE,EAAiB,UAFL,EACFH,KACiB,UAAY,UAEvCI,EAAgBC,IAAOC,IAAV,IAEGH,EAEAA,GAMhBI,EAAOF,IAAOG,EAAV,IACCL,GAIX,OACE,kBAACC,EAAD,KACE,kBAACG,EAAD,KAAON,KArDX,EAAKJ,MAAQ,CACXvB,KAAM,KACN0B,KAAM,GACNC,QAAS,IANM,E,sEA6DT,IACDD,EAAQS,KAAKZ,MAAbG,KAEP,OACE,kBAACU,EAAD,KACE,2BAAOlB,KAAK,OAAOQ,KAAK,OAAOW,SAAUF,KAAKnB,kBACpC,UAATU,GAAoBS,KAAKP,cAChB,YAATF,GAAsBS,KAAKP,cAC5B,kBAACU,EAAD,CAAQC,QAASJ,KAAKd,YAAtB,iB,GAtEamB,aA6EfJ,EAAYL,IAAOC,IAAV,KAKTM,EAASP,IAAOU,OAAV,KAMG3B,I,wGC/Ef,IAAM4B,EAAgBX,IAAOC,IAAV,KAMJW,EAff,WACE,OACE,kBAACD,EAAD,KACE,kBAAC,EAAD,QCPNE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5de4e1cc.chunk.js","sourcesContent":["// IMPORT\r\nimport Axios from 'axios'\r\n\r\n// CLASS\r\nclass AudioService {\r\n  static upload(file) {\r\n    return new Promise(((resolve, reject) => {\r\n      try {\r\n        const config = {headers: {'Content-Type': 'multipart/form-data' }}\r\n        const data = new FormData()\r\n        data.append('audioFile', file)\r\n\r\n        // https://oui-project-api.herokuapp.com/api/audio/upload\r\n        // http://127.0.0.1:5000/api/audio/upload\r\n        Axios.post('https://oui-project-api.herokuapp.com/api/audio/upload', data, config)\r\n          .then(res => resolve(res.data))\r\n          .catch(e => reject(e))\r\n      } catch (e) {\r\n        reject(e)\r\n      }\r\n    }))\r\n  }\r\n}\r\n\r\n// EXPORT\r\nexport default AudioService","// IMPORT\r\nimport React, {Component} from 'react'\r\nimport styled from \"@emotion/styled\"\r\n\r\n// IMPORT LOCAL\r\nimport AudioService from \"../../service/AudioService\"\r\n\r\n// CLASS\r\nclass Upload extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      file: null,\r\n      type: '',\r\n      message: '',\r\n    }\r\n  }\r\n\r\n  handleFileInput = (e) => {\r\n    const {name, files} = e.target\r\n    this.setState({[name]: files[0]})\r\n  }\r\n\r\n  uploadFile = async () => {\r\n    try {\r\n      const {file} = this.state\r\n\r\n      if (file) {\r\n        const res = await AudioService.upload(file)\r\n        if (res.error)\r\n          this.setState({type: 'error', message: res.error})\r\n        else\r\n          this.setState({type: 'success', message: 'File upload !', file: null})\r\n      } else {\r\n        this.setState({type: 'error', message: 'Choose a file to upload !'})\r\n      }\r\n\r\n    } catch (e) {\r\n      // console.log(e)\r\n      this.setState({type: 'error', message: 'Upload failed !'})\r\n    }\r\n  }\r\n\r\n  showMessage = () => {\r\n    const {message, type} = this.state\r\n    const color = type === 'error' ? '#c0392b' : '#27ae60'\r\n\r\n    const TextContainer = styled.div`\r\n      max-width: 150px;\r\n      border: 1px solid ${color};\r\n      border-radius: 3px;\r\n      background-color: ${color}11;\r\n      padding: .3em 0;\r\n      margin-top: 1em;\r\n      text-align: center;\r\n    `\r\n\r\n    const Text = styled.p`\r\n      color: ${color};\r\n      margin: 0;\r\n    `\r\n\r\n    return (\r\n      <TextContainer>\r\n        <Text>{message}</Text>\r\n      </TextContainer>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {type} = this.state\r\n\r\n    return(\r\n      <Container>\r\n        <input name='file' type='file' onChange={this.handleFileInput}/>\r\n        {type === 'error' && this.showMessage()}\r\n        {type === 'success' && this.showMessage()}\r\n        <Button onClick={this.uploadFile}>Upload !</Button>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\n// STYLE\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Button = styled.button`\r\n  width: 115px;\r\n  margin-top: 1em;\r\n`\r\n\r\n// EXPORT\r\nexport default Upload","// IMPORT\nimport React from 'react';\nimport styled from '@emotion/styled'\n\n// IMPORT LOCAL\nimport Upload from './views/Upload'\n\n// CLASS\nfunction App() {\n  return (\n    <MainContainer>\n      <Upload/>\n    </MainContainer>\n  );\n}\n\n// STYLE\nconst MainContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`\n\n// EXPORT\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}